name: test

on:
  push:
    branches: [ test ]
  workflow_dispatch:

jobs:
  Prerequisites:
    runs-on: ubuntu-latest
    # steps 之间传递数据可以通过 ${{ steps.step1.outputs.test }}
    # 而 jobs 之间传递则需要靠 ${{needs.job1.outputs.output1}}
    # 具体见 https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idoutputs
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    # 来自 https://docs.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#wdautohl_id_22:~:text=Dump%20GitHub%20context
    # 关于 Actions 的 Contexts 上下文信息见 https://docs.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#contexts
    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"

    # 本来根据 https://docs.github.com/en/developers/webhooks-and-events/webhook-events-and-payloads#push
    # 和 https://docs.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#object-filters
    # 在 PUSH 中可以通过 ${{ github.event.commits.*.added }} 来获取 added,modified,removed 文件的
    # 但是根据 https://github.blog/changelog/2019-10-16-changes-in-github-actions-push-event-payload/
    # 这三个属性已经被删除了，所以只能用 https://docs.github.com/en/rest/reference/repos#compare-two-commits
    - name: Get Filenames
      id: get-filenames
      env:
        repository: ${{ github.repository }} # The owner and repository name. For example, Codertocat/Hello-World.
        before: ${{ github.event.before }}
        after: ${{ github.event.after }}
      # 关于 CLI Parse JSON，可以用 jq，教程见 https://stedolan.github.io/jq/tutorial/
      # 由于 $filenames 中有空格，所以在 set-output 时
      # 不能直接用 $filenames，而应该用 $( echo $filenames )
      run: |
        res=$( curl -s "https://api.github.com/repos/Arriv9l/InfoSpider/compare/28f0820fed838a9176e84c157f0e7a7e8482d336...a0282a6923a2d99d28bc3a3d8d5b1b8aaed75a21" )
        filenames=$( echo $res | jq '.files[].filename' )
        echo "filenames: $filenames"
        echo "::set-output name=filenames::$( echo $filenames )"

    - name: Get Paths
      id: get-paths
      uses: actions/github-script@v3
      with:
        filenames: ${{ steps.get-filenames.outputs.filenames }}
        script: |
          //console.log(context)
          //console.log(process.env)
          const paths = []
          const filenames = core.getInput('filenames');
          console.log(`filenames: ${filenames}`)
          console.log( filenames.match(/part\d\/.+?(?=\/)/g) )
          for (const name of filenames) {
            console.log(`name: ${name}`)
            path = name.match(/part\d\/.+?(?=\/)/)
            console.log(`path: ${path}`)
            paths.append(path)
          }
          console.log(`paths: ${paths}`)
          const unique = (a) => [...new Set(a)]
          unique_paths = unique(paths)
          console.log(`unique_paths: ${unique_paths}`)
          core.setOutput('paths', unique_paths)

    - name: Set Matrix
      id: set-matrix
      env:
        PATHS: ${{ steps.get-paths.outputs.paths }}
      if: ${{ env.PATHS != '' }}
      run: |
        JSON="{\"path\":["

        # Loop by lines
        while read path; do
          # Add item to the matrix only if it is not already included
          JSONline="\"$path\","
          if [[ "$JSON" != *"$JSONline"* ]]; then
          JSON="$JSON$JSONline"
          fi
        done <<< "$PATHS"

        # Remove last "," and add closing brackets
        if [[ $JSON == *, ]]; then
        JSON="${JSON%?}"
        fi
        JSON="$JSON]}"
        echo "json: $JSON"
        echo "::set-output name=matrix::$JSON"


  Publish:
    runs-on: ubuntu-latest
    needs: Prerequisites
    strategy:
      matrix: ${{ fromJson(needs.Prerequisites.outputs.matrix) }}

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: 12

      - name: Install and Build 🔧
        run: |
          cd ${{ matrix.path }}
          yarn
          PUBLIC_URL=./ yarn build

      - name: Deploy 🚀
        uses: JamesIves/github-pages-deploy-action@4.0.0
        with:
          branch: gh-pages
          folder: ${{ matrix.path }}/build
          target-folder: ${{ matrix.path }}
          clean: false