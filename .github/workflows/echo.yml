name: test

on:
  push:
    branches: [ test ]
  workflow_dispatch:

jobs:
  Prerequisites:
    runs-on: ubuntu-latest
    outputs:
      paths: ${{ steps.get-paths.outputs.paths }}

    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"

    - name: Get Filenames
      id: get-filenames
      env:
        repository: ${{ github.repository }}
        before: ${{ github.event.before }}
        after: ${{ github.event.after }}
      run: |
        res=$(curl -s "https://api.github.com/repos/$repository/compare/$before...$after")
        sudo apt-get install jq
        filenames=$(echo $res | jq '.files[].filename')
        echo "::set-output name=filenames::$filenames"

    - name: Get Paths
      id: get-paths
      run: |
        paths=()
        for each in ${{ steps.get-filenames.outputs.filenames }}
        do
          echo "each: $each"
          path=$(echo $each | { grep -Po 'part[0-9]/.+?(?=/)' || true; })
          echo "path: $path"
          if [[ $path != "" ]]; then
            paths+=($path)
          fi
        done
        echo "paths: $paths"
        unique_paths=[$(echo ${paths[@]} | tr ' ' '\n' | sort -u | tr '\n' ', ')]
        echo "unique_paths: $unique_paths"
        echo "::set-output name=paths::$unique_paths"

  Build & Publish:
    runs-on: ubuntu-latest
    needs: Prerequisites
    strategy:
      matrix:
        path: ${{needs.Prerequisites.outputs.paths}}

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Echo
        run: echo ${{ matrix.path }}