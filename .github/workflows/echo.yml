name: test

on:
  push:
    branches: [ test ]
  workflow_dispatch:

jobs:
  Prerequisites:
    runs-on: ubuntu-latest
    # steps 之间传递数据可以通过 ${{ steps.step1.outputs.test }}
    # 而 jobs 之间传递则需要靠 ${{needs.job1.outputs.output1}}
    # 具体见 https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idoutputs
    outputs:
      flag: ${{ steps.get-paths.outputs.flag }}
      matrix: ${{ steps.set-matrix.outputs.matrix }}

    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    # 来自 https://docs.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#wdautohl_id_22:~:text=Dump%20GitHub%20context
    # 关于 Actions 的 Contexts 上下文信息见 https://docs.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#contexts
    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"

    # 本来根据 https://docs.github.com/en/developers/webhooks-and-events/webhook-events-and-payloads#push
    # 和 https://docs.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#object-filters
    # 在 PUSH 中可以通过 ${{ github.event.commits.*.added }} 来获取 added,modified,removed 文件的
    # 但是根据 https://github.blog/changelog/2019-10-16-changes-in-github-actions-push-event-payload/
    # 这三个属性已经被删除了，所以只能用 https://docs.github.com/en/rest/reference/repos#compare-two-commits
    - name: Get Paths
      id: get-paths
      uses: actions/github-script@v3
      env:
        repository: ${{ github.repository }} # The owner and repository name. For example, Codertocat/Hello-World.
        before: ${{ github.event.before }}
        after: ${{ github.event.after }}
      # 关于 CLI Parse JSON，可以用 jq，教程见 https://stedolan.github.io/jq/tutorial/
      # 由于 $filenames 中有空格，所以在 set-output 时
      # 不能直接用 $filenames，而应该用 $( echo $filenames )
      with:
        script: |
          //console.log(context)
          //console.log(process.env)
          //const result = await github.request("https://api.github.com/repos/${{ env.repository }}/compare/${{ env.before }}...${{ env.after }}")
          const result = await github.request("https://api.github.com/repos/Arriv9l/InfoSpider/compare/9f5494bacdc72ad92f7805816bec7cd24649276e...c0d46e25dbc30132101b82a0c4aa5640ec1f277d")
          //console.log(result.data)
          //console.log(result.data.files)
          paths = result.data.files
                    .map(x => x.filename.match(/part\d\/.+?(?=\/)/))
                    .filter(Boolean)
          unique = (a) => [...new Set(a)]
          paths = unique(paths)
          console.log(`paths: ${paths}`)
          console.log(${{ hashFiles('part1/1.2') }})
          console.log(${{ hashFiles('part1/1.2/package.json') }})
          console.log(${{ hashFiles('part1/1.2/*') }})
          console.log(${{ hashFiles('part1/1.3') }})
          console.log(${{ hashFiles('part1/1.3/*') }})
          console.log(`paths: ${paths}`)
          paths = paths.filter(x => {
                      core.exportVariable('x', x)
                      console.log(${{ hashFiles(env.x) }})
                      return ${{ hashFiles(env.x) != '' }}
                    })
          console.log(`paths: ${paths}`)
          core.setOutput('paths', paths)
          core.setOutput('flag', paths.length ? true : false)

    - name: Set Matrix
      id: set-matrix
      uses: actions/github-script@v3
      if: ${{ steps.get-paths.outputs.flag == true }}
      with:
        script: |
          const matrix = {}
          matrix.path = ${{ steps.get-paths.outputs.paths }}
          core.setOutput('matrix', JSON.stringify(matrix))


  Deploy:
    runs-on: ubuntu-latest
    needs: Prerequisites
    if: ${{ needs.Prerequisites.outputs.flag == true }}
    strategy:
      matrix: ${{ fromJson(needs.Prerequisites.outputs.matrix) }}

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: 12

      - name: test
        run: echo ${{ hashFiles(format('{0}/README.md', matrix.path)) }}

      - name: Add README 📝
        if: ${{ hashFiles(format('{0}/README.md', matrix.path)) != '' }}
        run: |
          cd ${{ matrix.path }}
          echo "##Preview\nhttps://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/${{ matrix.path }}" >> README.md

      - name: Install and Build 🔧
        run: |
          echo $(pwd)
          cd ${{ matrix.path }}
          yarn
          PUBLIC_URL=./ yarn build

      - name: Deploy 🚀
        uses: JamesIves/github-pages-deploy-action@4.0.0
        with:
          branch: gh-pages
          folder: ${{ matrix.path }}/build
          target-folder: ${{ matrix.path }}
          clean: false