name: test

on:
  push:
    branches: [ test ]
  workflow_dispatch:

jobs:
  Prerequisites:
    runs-on: ubuntu-latest
    outputs:
      flag: ${{ steps.set-matrix.outputs.flag }}
      matrix: ${{ steps.set-matrix.outputs.matrix }}

    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"

    - name: Get Filenames
      id: get-filenames
      env:
        repository: ${{ github.repository }}
        before: ${{ github.event.before }}
        after: ${{ github.event.after }}
      run: |
        res=$( curl -s "https://api.github.com/repos/Arriv9l/InfoSpider/compare/28f0820fed838a9176e84c157f0e7a7e8482d336...a0282a6923a2d99d28bc3a3d8d5b1b8aaed75a21" )
        sudo apt-get install jq
        filenames=$( echo $res | jq '[.files[].filename]' )
        echo "filenames: $filenames"
        echo "::set-output name=filenames::$( echo $filenames )"

    - name: Get Paths
      id: get-paths
      run: |
        echo "filenames: ${{ steps.get-filenames.outputs.filenames }}"
        paths=()
        for each in ${{ steps.get-filenames.outputs.filenames }}
        do
          echo "each: $each"
          path=$(echo $each | { grep -Po 'part[0-9]/.+?(?=/)' || true; })
          echo "path: $path"
          if [[ $path != "" ]]; then
            paths+=($path)
          fi
        done
        echo "paths: ${paths[@]}"
        # Escape newlines (replace \n with %0A)
        unique_paths=$( echo ${paths[@]} | tr ' ' '\n' | sort -u | sed ':a;N;$!ba;s/\n/%0A/g' )
        echo "unique_paths: $unique_paths"
        echo "::set-output name=paths::$unique_paths"

    - name: Set Matrix
      id: set-matrix
      env:
        PATHS: ${{ steps.get-paths.outputs.paths }}
      if: ${{ env.PATHS != '' }}
      run: |
        JSON="{\"path\":["

        # Loop by lines
        while read path; do
        # Add item to the matrix only if it is not already included
        JSONline="\"$path\","
        if [[ "$JSON" != *"$JSONline"* ]]; then
        JSON="$JSON$JSONline"
        fi
        done <<< "$PATHS"

        # Remove last "," and add closing brackets
        if [[ $JSON == *, ]]; then
        JSON="${JSON%?}"
        fi
        JSON="$JSON]}"
        echo "json: $JSON"
        echo "::set-output name=matrix::$JSON"


  Publish:
    runs-on: ubuntu-latest
    needs: Prerequisites
    strategy:
      matrix: ${{ fromJson(needs.Prerequisites.outputs.matrix) }}

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Echo
        run: |
          echo "matrix: ${{ toJson(matrix) }}"
          echo "path: ${{ matrix.path }}"