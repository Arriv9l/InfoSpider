{"version":3,"sources":["App.js","index.js"],"names":["CountryInfo","country","name","capital","population","languages","flag","map","i","src","alt","Country","showCountry","onClick","Display","countries","selected","setSelected","length","find","x","showCountryOf","App","useState","setCountries","newCountry","setNewCountry","value","onChange","event","input","target","axios","get","then","response","data","ReactDOM","render","document","getElementById"],"mappings":"iKAIMA,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACbC,EAA+CD,EAA/CC,KAAMC,EAAyCF,EAAzCE,QAASC,EAAgCH,EAAhCG,WAAYC,EAAoBJ,EAApBI,UAAWC,EAASL,EAATK,KAC9C,OACE,gCACE,6BAAKJ,IACL,gCACE,2CAAcC,KACd,8CAAiBC,QAEnB,2CACA,6BACGC,EAAUE,KAAI,WAAWC,GAAX,IAAGN,EAAH,EAAGA,KAAH,OACb,6BAAaA,GAAJM,QAGb,qBAAKC,IAAKH,EAAMI,IAAI,SAKpBC,EAAU,SAAC,GAA8B,IAA5BV,EAA2B,EAA3BA,QAASW,EAAkB,EAAlBA,YAC1B,OACE,gCACGX,EAAQC,KACT,wBAAQW,QAASD,EAAjB,sBAKAE,EAAU,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,UAAWC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YAMtC,OAAIF,EAAUG,OAAS,GACd,2EACEH,EAAUG,OAAS,EAE1B,gCACGH,EAAUR,KAAI,SAACN,EAAQO,GAAT,OACb,cAAC,EAAD,CAAiBP,QAASA,EAASW,YAAa,kBAXlC,SAACV,GACrB,IAAMD,EAAUc,EAAUI,MAAK,SAAAC,GAAC,OAAIA,EAAElB,OAASA,KAC/Ce,EAAY,cAAC,EAAD,CAAahB,QAASA,KAS0BoB,CAAcpB,EAAQC,QAA9DM,MAEfQ,KAGyB,IAArBD,EAAUG,OACZ,cAAC,EAAD,CAAajB,QAASc,EAAU,KAEhC,6CA8BIO,EA1BH,WAAO,IAAD,EACoBC,mBAAS,IAD7B,mBACRR,EADQ,KACGS,EADH,OAEsBD,mBAAS,IAF/B,mBAERE,EAFQ,KAEIC,EAFJ,OAGkBH,mBAAS,IAH3B,mBAGRP,EAHQ,KAGEC,EAHF,KAiBhB,OACE,gCACE,iDACA,uBAAOU,MAAOF,EAAYG,SAfF,SAACC,GAC3B,IAAIC,EAAQD,EAAME,OAAOJ,MACzBD,EAAcI,GACdb,EAAY,IACRa,EACFE,IACGC,IADH,gDACgDH,IAC7CI,MAAK,SAAAC,GAAQ,OAAIX,EAAaW,EAASC,SAE1CZ,EAAa,OAOb,cAAC,EAAD,CAAST,UAAWA,EAAWC,SAAUA,EAAUC,YAAaA,QC1EtEoB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a078eaeb.chunk.js","sourcesContent":["import React, { useState } from 'react'\n\nimport axios from 'axios'\n\nconst CountryInfo = ({ country }) => {\n  const { name, capital, population, languages, flag } = country\n  return (\n    <div>\n      <h1>{name}</h1>\n      <div>\n        <div>capital {capital}</div>\n        <div>population {population}</div>\n      </div>\n      <h3>languages</h3>\n      <ul>\n        {languages.map(({ name }, i) =>\n          <li key={i}>{name}</li>\n        )}\n      </ul>\n      <img src={flag} alt='' />\n    </div>\n  )\n}\n\nconst Country = ({ country, showCountry }) => {\n  return (\n    <div>\n      {country.name}\n      <button onClick={showCountry}>show</button>\n    </div>\n  )\n}\n\nconst Display = ({ countries, selected, setSelected }) => {\n  const showCountryOf = (name) => {\n    const country = countries.find(x => x.name === name)\n    setSelected(<CountryInfo country={country} />)\n  }\n\n  if (countries.length > 10) {\n    return <div>Too many matches, specify another filter</div>\n  } else if (countries.length > 1) {\n    return (\n      <div>\n        {countries.map((country,i) =>\n          <Country key={i} country={country} showCountry={() => showCountryOf(country.name)} />\n        )}\n        {selected}\n      </div>\n    )\n  } else if (countries.length === 1) {\n    return <CountryInfo country={countries[0]} />\n  } else {\n    return <div>No result</div>\n  }\n}\n\nconst App = () => {\n  const [ countries, setCountries ] = useState([])\n  const [ newCountry, setNewCountry ] = useState('')\n  const [ selected, setSelected ] = useState('')\n\n  const handleCountryChange = (event) => {\n    let input = event.target.value\n    setNewCountry(input)\n    setSelected('')\n    if (input)\n      axios\n        .get(`https://restcountries.eu/rest/v2/name/${input}`)\n        .then(response => setCountries(response.data))\n    else\n      setCountries([])\n  }\n\n  return (\n    <div>\n      <div>find countries</div>\n      <input value={newCountry} onChange={handleCountryChange} />\n      <Display countries={countries} selected={selected} setSelected={setSelected} />\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}